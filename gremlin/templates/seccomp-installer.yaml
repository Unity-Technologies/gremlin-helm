{{ if .Values.gremlin.podSecurity.seccomp.create }}
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: gremlin-seccomp-installer
  annotations:
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  {{ .Values.gremlin.podSecurity.seccomp.defaultProfileName }}
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: {{ .Values.gremlin.podSecurity.seccomp.allowedProfilesNames }}
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities: [ ALL ]
  volumes: [ 'hostPath', 'configMap' ]
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser: { rule: 'RunAsAny' }
  seLinux: { rule: 'RunAsAny' }
  supplementalGroups: { rule: 'RunAsAny' }
  fsGroup: { rule: 'RunAsAny' }
  readOnlyRootFilesystem: false
  allowedHostPaths:
    - pathPrefix: {{ .Values.gremlin.podSecurity.seccomp.root }}
      readOnly: false
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gremlin-seccomp-installer
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: psp:gremlin-seccomp-installer
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - gremlin-seccomp-installer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default:gremlin-seccomp-installer
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:gremlin-seccomp-installer
subjects:
- kind: ServiceAccount
  name: gremlin-seccomp-installer
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: seccomp-profile
  namespace: {{ .Release.Namespace }}
data:
  gremlin-profile.json: |
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gremlin-seccomp-installer
  namespace: {{ .Release.Namespace }}
  labels:
    security: gremlin-seccomp-installer
spec:
  selector:
    matchLabels:
      security: gremlin-seccomp-installer
  template:
    metadata:
      labels:
        security: gremlin-seccomp-installer
    spec:
      serviceAccountName: gremlin-seccomp-installer
      initContainers:
      - name: gremlin-seccomp-installer
        image: alpine:3.10.0
        command: ["/bin/sh", "-c", "cp -r -L /seccomp/gremlin-profile.json /host/seccomp/"]
        volumeMounts:
        - name: profiles
          mountPath: /seccomp
        - name: hostseccomp
          mountPath: /host/seccomp
          readOnly: false
      containers:
      - name: pause
        image: k8s.gcr.io/pause:3.1
      terminationGracePeriodSeconds: 5
      volumes:
      - name: hostseccomp
        hostPath:
          path: /var/lib/kubelet/seccomp
      - name: profiles
        configMap:
          name: seccomp-profile
{{ end }}
